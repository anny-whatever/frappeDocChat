// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]
}

model Document {
  id              String   @id @default(cuid())
  filename        String
  title           String
  content         String
  sourceUrl       String?
  embedding       Unsupported("vector(1536)")?
  metadata        Json?
  isChunked       Boolean  @default(false)
  parentDocId     String?
  chunkIndex      Int?
  totalChunks     Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([filename, chunkIndex])
  @@index([parentDocId])
  @@index([filename])
  @@map("documents")
}

model Conversation {
  id          String   @id @default(cuid())
  title       String?
  userId      String?  // For future user management
  metadata    Json?    // Store additional conversation metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  messages    Message[]

  @@index([userId])
  @@index([createdAt])
  @@map("conversations")
}

model Message {
  id              String   @id @default(cuid())
  conversationId  String
  role            String   // "user", "assistant", "system", "function", "tool"
  content         String?
  name            String?  // For function/tool calls
  toolCalls       Json?    // Store tool calls data
  toolCallId      String?  // For tool responses
  metadata        Json?    // Additional message metadata
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  conversation    Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId])
  @@index([createdAt])
  @@map("messages")
}