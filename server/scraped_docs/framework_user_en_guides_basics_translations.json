{
  "route": "framework/user/en/guides/basics/translations",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/basics/translations",
  "title": "translations",
  "content": "This document shows how translations are managed in ERPNext and how to add a new language or update translations of an existing language.\n\n1. Source\n\nTranslatable text exists in various sources:\n\nJavascript Code Files (both framework and application)\nPython Code Files\nHTML templates\nWorkspace definitions\nDocTypes (names, labels and select options)\nand many more ...\n\nStrings in Code Files\n\nStrings in code files are annotated using the translation method\n\nIn Python this is frappe._, for example:\n\nfrappe._(\"String {0} must be translated\").format(txt)\n\nIn Javascript it is the __ method. Example:\n\n__(\"String {0} must be translated\", [txt])\n\n2. How Translations Are Picked up During Execution\n\nWhenever a translation is called via the _ method, the entire translation dictionaries from all apps are built and stored in memcache.\n\nBased on the user preferences or request preferences, the appropriate translations are loaded at the time of request on the server side. Or if metadata (DocType) is queried, then the appropriate translations are appended when the DocType data is requested.\n\nThe underscore _ method will replace the strings based on the available translations loaded at the time.\n\n3. Adding New Translations\n\nTo find untranslated strings, run bench get-untranslated [lang] [path]\nAdd the translated strings in another file in the same order\nrun bench update-translations [lang] [path of untranslated strings] [path of translated strings]\n\n4. Improving Translations:\n\nFor updating translations, please go to the to the translation portal.\n\nIf you want to do it directly via code:\n\nTo improve an existing translation, just edit the master translation files in the translations of each app\n\n Please contribute your translations back to ERPNext by sending us a Pull Request.\n\n5. Bootstrapping a New Language\n\nIf you want to add a new language it is similar to adding new translations. You need to first export all the translations strings in one file, get them translated via Google Translate Tool or Bing Translate Tool and then import the translations into individual apps.\n\nStep 1: Export to a file\n\n$ bench get-untranslated [lang] [path]\n\nStep 2: Translate\n\nCreate another file with updated translations (in the same order as the source file). For this you can use the Google Translator Toolkit or Bing Translator.\n\nStep 3: Import your translations\n\n$ bench update-translations [lang] [source path] [translated path]\n\nStep 4: Update languages.txt\n\nAdd your language in apps/languages.txt and also frappe/data/languages.txt (fore new bench installs)\n\nStep 5: Commit each app and push\n\nA new file will be added to the translations folder in each app. You need to add that file and push to your repo. Then send us a pull-request.",
  "scrapedAt": "2025-10-22T00:02:21.219Z"
}