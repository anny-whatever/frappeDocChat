{
  "route": "framework/user/en/tutorial/install-and-setup-bench",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/tutorial/install-and-setup-bench",
  "title": "install-and-setup-bench",
  "content": "Bench is the command line tool to manage Frappe apps and sites.\n\nInstallation\n\nIf you haven't installed Bench, follow the Installation guide. After installation, you should be able to run commands that start with bench.\n\nRun the following command to test your installation:\n\n$ bench --version\n5.1.0\n\nCreate the frappe-bench directory\n\nLet's create our project folder which will contain our apps and sites. Run the following command:\n\n$ bench init frappe-bench\n\nThis will create a directory named frappe-bench in your current working directory. It will do the following:\n\nCreate a python virtual environment under env directory.\nFetch and install the frappe app as a python package.\nInstall node modules of frappe.\nBuild static assets.\n\nDirectory Structure\n\n.\n├── Procfile\n├── apps\n│ └── frappe\n├── config\n│ ├── pids\n│ ├── redis_cache.conf\n│ ├── redis_queue.conf\n│ └── redis_socketio.conf\n├── env\n│ ├── bin\n│ ├── include\n│ ├── lib\n│ └── share\n├── logs\n│ ├── backup.log\n│ └── bench.log\n└── sites\n ├── apps.txt\n ├── assets\n └── common_site_config.json\n\nenv: Python virtual environment\nconfig: Config files for Redis and Nginx\nlogs: Log files for every process (web, worker)\nsites: Sites directory\n\nassets: Static assets that served via Nginx in production\napps.txt: List of installed frappe apps\ncommon_site_config.json: Site config that is available in all sites\n\napps: Apps directory\n\nfrappe: The Frappe app directory\n\nProcfile: List of processes that run in development\n\nStart the Bench Server\n\nNow that we have created our frappe-bench directory, we can start the Frappe web server by running the following command:\n\n$ cd frappe-bench\n$ bench start\n18:16:36 system | redis_cache.1 started (pid=11231)\n18:16:36 system | redis_socketio.1 started (pid=11233)\n18:16:36 system | redis_queue.1 started (pid=11234)\n18:16:36 system | socketio.1 started (pid=11236)\n18:16:36 system | web.1 started (pid=11237)\n18:16:36 system | watch.1 started (pid=11240)\n18:16:36 system | schedule.1 started (pid=11241)\n18:16:36 system | worker_short.1 started (pid=11242)\n18:16:36 redis_queue.1 | 11234:C 10 Jul 2020 18:16:36.320 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n18:16:36 redis_queue.1 | 11234:C 10 Jul 2020 18:16:36.320 # Redis version=6.0.5, bits=64, commit=00000000, modified=0, pid=11234, just started\n18:16:36 redis_queue.1 | 11234:C 10 Jul 2020 18:16:36.320 # Configuration loaded\n18:16:36 system | worker_long.1 started (pid=11244)\n18:16:36 redis_cache.1 | 11231:C 10 Jul 2020 18:16:36.318 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n18:16:36 redis_cache.1 | 11231:C 10 Jul 2020 18:16:36.318 # Redis version=6.0.5, bits=64, commit=00000000, modified=0, pid=11231, just started\n18:16:36 redis_cache.1 | 11231:C 10 Jul 2020 18:16:36.318 # Configuration loaded\n18:16:36 redis_cache.1 | 11231:M 10 Jul 2020 18:16:36.320 * Increased maximum number of open files to 10032 (it was originally set to 256).\n18:16:36 redis_queue.1 | 11234:M 10 Jul 2020 18:16:36.325 * Increased maximum number of open files to 10032 (it was originally set to 256).\n18:16:36 system | worker_default.1 started (pid=11245)\n18:16:36 redis_cache.1 | 11231:M 10 Jul 2020 18:16:36.337 * Running mode=standalone, port=13000.\n18:16:36 redis_cache.1 | 11231:M 10 Jul 2020 18:16:36.337 # Server initialized\n18:16:36 redis_cache.1 | 11231:M 10 Jul 2020 18:16:36.337 * Ready to accept connections\n18:16:36 redis_queue.1 | 11234:M 10 Jul 2020 18:16:36.367 * Running mode=standalone, port=11000.\n18:16:36 redis_queue.1 | 11234:M 10 Jul 2020 18:16:36.367 # Server initialized\n18:16:36 redis_queue.1 | 11234:M 10 Jul 2020 18:16:36.367 * Ready to accept connections\n18:16:36 redis_socketio.1 | 11233:C 10 Jul 2020 18:16:36.359 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n18:16:36 redis_socketio.1 | 11233:C 10 Jul 2020 18:16:36.359 # Redis version=6.0.5, bits=64, commit=00000000, modified=0, pid=11233, just started\n18:16:36 redis_socketio.1 | 11233:C 10 Jul 2020 18:16:36.359 # Configuration loaded\n18:16:36 redis_socketio.1 | 11233:M 10 Jul 2020 18:16:36.374 * Increased maximum number of open files to 10032 (it was originally set to 256).\n18:16:36 redis_socketio.1 | 11233:M 10 Jul 2020 18:16:36.417 * Running mode=standalone, port=12000.\n18:16:36 redis_socketio.1 | 11233:M 10 Jul 2020 18:16:36.418 # Server initialized\n18:16:36 redis_socketio.1 | 11233:M 10 Jul 2020 18:16:36.418 * Ready to accept connections\n18:16:37 socketio.1 | listening on *: 9000\n18:16:41 web.1 | * Running on http://0.0.0.0:8000/ (Press CTRL+C to quit)\n18:16:41 web.1 | * Restarting with fsevents reloader\n18:16:41 watch.1 | yarn run v1.22.4\n18:16:41 watch.1 | $ node rollup/watch.js\n18:16:42 watch.1 |\n18:16:42 watch.1 | Rollup Watcher Started\n18:16:42 watch.1 |\n18:16:42 watch.1 | Watching...\n18:16:42 web.1 | * Debugger is active!\n18:16:42 web.1 | * Debugger PIN: 100-672-925\n18:16:43 watch.1 | Rebuilding frappe-web-b4.css\n18:16:44 watch.1 | Rebuilding frappe-chat-web.css\n18:16:44 watch.1 | Rebuilding chat.js\n18:16:45 watch.1 | Rebuilding frappe-recorder.min.js\n18:16:48 watch.1 | Rebuilding checkout.min.js\n18:16:48 watch.1 | Rebuilding frappe-web.min.js\n18:16:51 watch.1 | Rebuilding bootstrap-4-web.min.js\n18:16:52 watch.1 | Rebuilding control.min.js\n18:16:54 watch.1 | Rebuilding dialog.min.js\n18:16:57 watch.1 | Rebuilding desk.min.css\n18:16:57 watch.1 | Rebuilding frappe-rtl.css\n18:16:58 watch.1 | Rebuilding printview.css\n18:16:58 watch.1 | Rebuilding desk.min.js\n18:17:04 watch.1 | Rebuilding form.min.css\n18:17:04 watch.1 | Rebuilding form.min.js\n18:17:07 watch.1 | Rebuilding list.min.css\n18:17:07 watch.1 | Rebuilding list.min.js\n18:17:09 watch.1 | Rebuilding report.min.css\n18:17:09 watch.1 | Rebuilding report.min.js\n18:17:12 watch.1 | Rebuilding web_form.min.js\n18:17:12 watch.1 | Rebuilding web_form.css\n18:17:13 watch.1 | Rebuilding email.css\n18:17:13 watch.1 | Rebuilding social.min.js\n18:17:13 watch.1 | Rebuilding barcode_scanner.min.js\n18:17:15 watch.1 | Rebuilding data_import_tools.min.js\n\nThis will start several processes including a Python web server based on Gunicorn, redis servers for caching, job queuing and socketio pub-sub, background workers, node server for socketio and a node server for compiling JS/CSS files.\n\nThe web server will start listening on the port 8000 but we don't have any sites yet to serve. Our next step is to create our app and create a site that will have this app installed.\n\nMake sure not to close the terminal where bench start is running. To run bench commands, create another terminal and cd into the frappe-bench directory.\n\nGood job on following the tutorial so far!\n\nNext: Create an App",
  "scrapedAt": "2025-10-22T00:01:02.556Z"
}