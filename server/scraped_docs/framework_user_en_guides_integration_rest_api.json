{
  "route": "framework/user/en/guides/integration/rest_api",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/integration/rest_api",
  "title": "rest_api",
  "content": "Frappe ships with an HTTP API that can be classified into Remote Procedure Calls (RPC), to call whitelisted methods and Representational State Transfer (REST), to manipulate resources.\n\nThe base URL is https://{your frappe instance}. Every request shown here should be added to the end of your base URL. For example, if your instance is demo.erpnext.com, GET /api/resource/User means GET https://demo.erpnext.com/api/resource/User.\n\nAPI v1\n\nAll v1 API endpoints are prefixed with /api/. Starting from Frappe Framework version 15, they can instead be prefixed with /api/v1/.\n\nRPC\n\nA request to an endpoint /api/method/dotted.path.to.method will call a whitelisted python method.\n\nFor example, GET /api/method/frappe.auth.get_logged_user will call this function from frappe's auth module:\n\n@frappe.whitelist()\ndef get_logged_user():\n return frappe.session.user\n\nResponse:\n\n{\n \"message\": \"Administrator\"\n}\n\nREST\n\nAll documents in Frappe are available via a RESTful API with prefix /api/resource/. You can perform all CRUD operations on them:\n\nCreate\n\nYou can create a document by sending a POST request to the endpoint, /api/resource/{doctype}.\nRead\n\nYou can get a document by its name using the endpoint, /api/resource/{doctype}/{name}\nUpdate\n\nYou can update a document by sending a PUT request to the endpoint, /api/resource/{doctype}/{name}. This acts like a PATCH HTTP request in which you do not have to send the whole document but only the parts you want to change.\nDelete\n\nYou can delete a document by its name by sending a DELETE request to the endpoint, /api/resource/{doctype}/{name}.\n\nAPI v2\n\n API v2 is available starting from Frappe Framework v15\n\nAll v2 API endpoints are prefixed with /api/v2/.\n\nRPC v2\n\nSimilar to v1, RPC endpoints are available at /api/v2/method/ prefix. The following endpoints are available:\n\n/api/v2/method/login - Handle user login (implicit)\n/api/v2/method/logout - Log out current user\n/api/v2/method/ping - Check server status\n/api/v2/method/upload_file - Upload a file\n/api/v2/method/dotted.path.to.method - Call any whitelisted method\n/api/v2/method/<doctype>/<method> - Call whitelisted method from doctype controller\n/api/v2/method/run_doc_method - Run a whitelisted method on a document\n\nREST v2\n\nAPI v2 provides a more RESTful interface with the prefix /api/v2/document/ and /api/v2/doctype/. The following operations are supported:\n\nDocument Operations\n\nCreate\n\nCreate a document by sending a POST request to /api/v2/document/{doctype}\nRead\n\nGet a document by sending a GET request to /api/v2/document/{doctype}/{name}/\nUpdate\n\nUpdate a document by sending a PATCH or PUT request to /api/v2/document/{doctype}/{name}/\nDelete\n\nDelete a document by sending a DELETE request to /api/v2/document/{doctype}/{name}/\nCopy\n\nGet a clean copy of a document by sending a GET request to /api/v2/document/{doctype}/{name}/copy\nExecute Method\n\nExecute a method on a document by sending a GET or POST request to /api/v2/document/{doctype}/{name}/method/{method}\n\nCommon values for method: add_comment?text=hello, submit, cancel, rename?name=newname. \n\nDocType Operations\n\nGet Metadata\n\nGet doctype metadata by sending a GET request to /api/v2/doctype/{doctype}/meta\nGet Count\n\nGet total count of records by sending a GET request to /api/v2/doctype/{doctype}/count\nList Documents\n\nList documents by sending a GET request to /api/v2/document/{doctype}. Supports pagination and field selection through query parameters.",
  "scrapedAt": "2025-10-22T00:03:20.743Z"
}