{
  "route": "framework/user/en/basics/doctypes/actions-and-links",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/basics/doctypes/actions-and-links",
  "title": "Added in Version 12.1",
  "content": "Added in Version 12.1\n\nAction and Links (also called Connections) are two ways to provide the end user more interaction with the document. The image below shows what they are :\n\n \n\nActions\n\nA DocType may have some DocType Action that will result in a button creation on the DocType View. Supported actions are:\n\nServer Action: This will trigger a whitelisted server action.\nRoute: This will redirect to a given route.\n\nConfiguration of Action\n\n \n\nConfiguration of Action in custom app\n\nTo call an Action in you own app, you will need a python function decorated with frappe.whitelist :\n\nimport frappe\n\n@frappe.whitelist()\ndef execute_function(*args,**kwargs):\n \"\"\"\n This fonction will be executed when the Execute Action Button will be clicked\n \"\"\"\n print('Hello World')\n # The data is transmitted via keyword argument\n print(kwargs)\n\nThis code should go somewhere inside you app, typically in a file like apps/my_app/my_app/api.py\n\nAnd then, configure the correspondant Action path :\n\n \n\nConnections (Linked Documents)\n\nA standard navigation aid to the DocType view is the Connections section on the dashboard. This helps the viewer identify at a glance which document types are connected to this DocType and can quickly create new related documents.\n\nThese links also support adding internal links (links to DocType in child tables).\n\nConfiguration Connections\n\n \n\n \n\nVia script\n\nTo configure connections for a doctype in your app, create a get_data() function inside <doctype>_dashboard.py. Here's an example from the sales_invoice_dashboard.py of the Sales Invoice doctype from ERPNext:\n\nfrom frappe import _\n\ndef get_data():\n return {\n \"fieldname\": \"sales_invoice\",\n \"non_standard_fieldnames\": {\n \"Delivery Note\": \"against_sales_invoice\",\n \"Journal Entry\": \"reference_name\",\n \"Payment Entry\": \"reference_name\",\n \"Payment Request\": \"reference_name\",\n \"Sales Invoice\": \"return_against\",\n \"Auto Repeat\": \"reference_document\",\n \"Purchase Invoice\": \"inter_company_invoice_reference\",\n },\n \"internal_links\": {\n \"Sales Order\": [\"items\", \"sales_order\"],\n \"Timesheet\": [\"timesheets\", \"time_sheet\"],\n },\n \"internal_and_external_links\": {\n \"Delivery Note\": [\"items\", \"delivery_note\"],\n },\n \"transactions\": [\n {\n \"label\": _(\"Payment\"),\n \"items\": [\n \"Payment Entry\",\n \"Payment Request\",\n \"Journal Entry\",\n \"Invoice Discounting\",\n \"Dunning\",\n ],\n },\n {\"label\": _(\"Reference\"), \"items\": [\"Timesheet\", \"Delivery Note\", \"Sales Order\"]},\n {\"label\": _(\"Returns\"), \"items\": [\"Sales Invoice\"]},\n {\"label\": _(\"Subscription\"), \"items\": [\"Auto Repeat\"]},\n {\"label\": _(\"Internal Transfers\"), \"items\": [\"Purchase Invoice\"]},\n ],\n }\n\ntransactions define all the connections and the respective groups to put them under.\ninternal_links define the connections where the doctype has internal links. For example, Sales Invoice has internal links through its Item child table to the Sales Order doctype.\ninternal_and_external_links define the connections where the doctype has both internal and external links. For example, Sales Invoice has internal links through its Item child table to the Delivery Note doctype and Sales Invoice also has external links to the Delivery Note doctype through its Item child table.\nfieldname defines the default fieldname to be searched while finding external links for the doctype.\nnon_standard_fieldnames define the fieldnames and their respective doctypes to be searched while finding external links for the doctype.\n\nThis would result in the following connections:\n\n \n\nCustomization of Actions and Links\n\nDocType Actions and Links are extensible via Customize Form",
  "scrapedAt": "2025-10-22T00:01:37.166Z"
}