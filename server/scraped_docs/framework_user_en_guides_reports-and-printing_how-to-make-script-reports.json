{
  "route": "framework/user/en/guides/reports-and-printing/how-to-make-script-reports",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/reports-and-printing/how-to-make-script-reports",
  "title": "how-to-make-script-reports",
  "content": "You can create tabulated reports using server side scripts by creating a new Report.\n\n Note: You will need Administrator Permissions for this.\n\nSince these reports give you unrestricted access via Python scripts, they can only be created by Administrators. The script part of the report becomes a part of the repository of the application. If you have not created an app, read this.\n\n Note: You must be in Developer Mode to do this\n\n1. Create a new Report\n\nSet Report Type as \"Script Report\"\nSet \"Is Standard\" as \"Yes\"\nSelect the Module in which you want to add this report\nIn the module folder (for example if it is Accounts in ERPnext the folder will be erpnext/accounts/report/[report-name]) you will see that templates for the report files will be created.\nIn the .js file, you can set filters for the reports\nIn the .py file, you can write the script that will generate the report\n\n2. Add Filters\n\nYou can add filters in the .js. See an example below:\n\nfrappe.query_reports[\"Accounts Receivable\"] = {\n \"filters\": [\n {\n \"fieldname\":\"company\",\n \"label\": __(\"Company\"),\n \"fieldtype\": \"Link\",\n \"options\": \"Company\",\n \"default\": frappe.defaults.get_user_default(\"company\")\n },\n ]\n }\n\nThese properties are the same as you would set in a DocField in a DocType\n\n3. Add the Script\n\nIn the .py file you can add the script for generating the report.\n\nIn the execute method, two lists columns and data are returned\nColumns must be a list of dictionaries containing fields like fieldname, label, fieldtype, options,width. For example:\n\ncolumns = [{\n \"fieldname\": \"account\",\n \"label\": _(\"Account\"),\n \"fieldtype\": \"Link\",\n \"options\": \"Account\",\n \"width\": 300\n},\n{\n \"fieldname\": \"currency\",\n \"label\": _(\"Currency\"),\n \"fieldtype\": \"Link\",\n \"options\": \"Currency\",\n}]\n\nYou can use all server side modules to build your report.\nFor example see existing reports. (Balance Sheet)\n\n4. Add link for your report on the module page\n\nIn the module folder (for example if it is Accounts in ERPNext the folder will be erpnext/config/accounts.py) you will see labels and items for various sections. The new report can be added in the item list as show in the example:\n\ndef get_data():\n return [{\n \"label\": _(\"Accounting Statements\"),\n \"items\": [{\n \"type\": \"report\",\n \"name\": \"Balance Sheet\",\n \"doctype\": \"GL Entry\",\n \"is_query_report\": True\n }]\n }]",
  "scrapedAt": "2025-10-22T00:02:59.218Z"
}