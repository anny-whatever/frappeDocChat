{
  "route": "framework/user/en/installation",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/installation",
  "title": "installation",
  "content": "Note: For production deployments or docker based development use frappe_docker.\n\nSystem Requirements\n\nThis guide assumes you are using a personal computer, VPS or a bare-metal server. You also need to be on a *nix system, so any Linux Distribution and macOS is supported. If you're a Windows user, you could use Ubuntu in WSL. We officially support only the following distributions.\n\nmacOS\nDebian / Ubuntu\n\n Learn more about the architecture here.\n\nPre-requisites\n\nMariaDB 10.6.6+ (11.3 is recommended on develop)\nPython 3.10+\nNode 18+\nRedis 6 (caching and realtime updates)\nyarn 1.12+ (js dependency manager)\npip 20+ (py dependency manager)\nwkhtmltopdf (version 0.12.5 with patched qt) (for pdf generation)\ncron (bench's scheduled jobs: automated certificate renewal, scheduled backups)\n\nmacOS\n\nInstall command line version of Xcode tools.\n\nxcode-select --install\n\nInstall Homebrew. It makes it easy to install packages on macOS.\n\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n(It may prompt you to run some additional commands at the end, which will ensure brew is available in your PATH)\n\nInstall wkhtmltopdf\n\ncurl -L https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-2/wkhtmltox-0.12.6-2.macos-cocoa.pkg -O\n\ninstaller -pkg wkhtmltox-0.12.6-2.macos-cocoa.pkg -target ~\n\nNow, you can easily install the required packages by running the following command\n\nbrew install python@3.12 git redis mariadb@10.6 node@18 postgresql pkg-config mariadb-connector-c\n\nNow, edit the MariaDB configuration file (this step is not required for Frappe v15.21.0 or above).\n\nnano /usr/local/etc/my.cnf\n\nFor Apple Silicon (non Intel macs), the path for the MariaDB config is\n\nnano /opt/homebrew/etc/my.cnf\n\nAnd add this configuration\n\n[mysqld]\ncharacter-set-client-handshake = FALSE\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_unicode_ci\nbind-address = 127.0.0.1\n\n[mysql]\ndefault-character-set = utf8mb4\n\nNow, just restart the mysql service and you are good to go.\n\nbrew services restart mariadb@10.6\n\nInstall Yarn\n\nInstall yarn using npm\n\nnpm install -g yarn\n\nDebian / Ubuntu\n\nYou should be running Debian 12+ or Ubuntu 22.04+, otherwise you may have issues with some of the packages.\n\nUpdate your system's package index\n\nsudo apt update\n\nInstall git, python, and redis\n\nsudo apt install git python-is-python3 python3-dev python3-pip redis-server libmariadb-dev mariadb-server mariadb-client pkg-config\n\nDuring this installation you'll be prompted to set the MySQL root password. If you are not prompted, you'll have to initialize the MySQL server setup yourself. You can do that by running the command:\n\nmariadb-secure-installation\n\n Remember: only run it if you're not prompted the password during setup.\n\nIt is really important that you remember this password, since it'll be useful later on.\n\nNow, edit the MariaDB configuration file (this step is not required for Frappe v15.21.0 or above).\n\nnano /etc/mysql/my.cnf\n\nAnd add this configuration\n\n[mysqld]\ncharacter-set-client-handshake = FALSE\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_unicode_ci\n\n[mysql]\ndefault-character-set = utf8mb4\n\nNow, just restart the MariaDB service and you are good to go.\n\nsudo systemctl restart mariadb\n\nInstall Node\n\nWe recommend installing node using nvm\n\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash\n\nAfter nvm is installed, you may have to close your terminal and open another one. Now run the following command to install node.\n\nnvm install 18 # or 20, 22\n\nVerify the installed version, by running:\n\n$ node -v\nv18.20.4\n\nFinally, install yarn using npm\n\nnpm install -g yarn\n\nInstall wkhtmltopdf\n\nsudo apt install xvfb libfontconfig\n\nDownload and install wkhtmltopdf package from https://wkhtmltopdf.org/downloads.html, then run this command to install the package.\n\nsudo dpkg -i wkhtmltox_file.deb\n\nInstall Bench CLI\n\nInstall bench via pip\n\npip install frappe-bench\n\nNote: depending on your OS and version of python, you may need to use pip3 instead of pip.\n\nPip discourages system-wide installations, thus you might have to do something equivalent to source rcfile. Will vary depending on your OS. E.g. for Ubuntu\n\nsource ~/.profile\n\nYou may need to manually add the directory its installed to into your PATH. The output of pip install should indicate this if required. You can run something like this with the correct path to achieve this. \n\necho \"export PATH=/path/to/bin:$PATH\" >> ~/.profile\nsource ~/.profile\n\nDepending on your OS version and python/pip version, you may get an error here regarding an externally-managed-environment\n\nYou can work around this for now by running or use virtualenv\n\npip install frappe-bench --break-system-packages\n\nAn alternative method to do this is with uv and a shell alias\n\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n\nAdd alias bench='uvx --from frappe-bench bench' to your shell rc file (.zshrc, .bashrc or similar)\n\nConfirm the bench installation by checking the version\n\nbench --version\n\nCreate your first bench.\n\ncd ~\nbench init <directory name>\n\nCongratulations, you have installed bench onto your system.",
  "scrapedAt": "2025-10-22T00:01:00.326Z"
}