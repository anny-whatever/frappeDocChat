{
  "route": "framework/user/en/guides/portal-development/generators",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/portal-development/generators",
  "title": "generators",
  "content": "If every document in a table (DocType) corresponds to a web-page, you can setup generators.\n\nTo setup a generator you must:\n\nAdd a field route that specifies the route of the page\nAdd a condition field to indicate whether a page is viewable or not.\nAdd the doctype name in website_generators in hooks.py of your app.\nSubclass the controller from frappe.website.website_generator.WebsiteGenerator\nCreate a template for your page\nAdd custom properties (context) for the template\nCustomize route and list view\n\nLet us see this with the help of an example:\n\nExample\n\n1. Add fields\n\nWe added published, route in the DocType\n\nNote: The field route is mandatory\n\n \n\n2. Added Website Generator to Hooks\n\nSince Job Opening is in erpnext, we have added to the list of existing generator hooks:\n\nwebsite_generators = [\"Item Group\", \"Item\", \"Sales Partner\", \"Job Opening\"]\n\nIf the website_generators property does not exist in your hooks.py, add it!\n\n3. Controller\n\nWe add the website property to the JobOpening class in job_opening.py\n\nIn get_context, parents property will indicate the breadcrumbs\n\nfrom frappe.website.website_generator import WebsiteGenerator\nfrom frappe import _\n\n# subclass from WebsiteGenerator, not Document\nclass JobOpening(WebsiteGenerator):\n website = frappe._dict(\n template = \"templates/generators/job_opening.html\",\n condition_field = \"published\",\n page_title_field = \"job_title\",\n )\n\n def get_context(self, context):\n # show breadcrumbs\n context.parents = [{'name': 'jobs', 'title': _('All Jobs') }]\n\nNote: Once you do this, you should see the \"See in Website\" link on the document form.\n\n4. Add the template\n\nAdd the template in erpnext/templates/generators/job_opening.html\n\n{% raw %}{% extends \"templates/web.html\" %}\n\n{% block breadcrumbs %}\n {% include \"templates/includes/breadcrumbs.html\" %}\n{% endblock %}\n\n{% block header %}\n<h1>{{ job_title }}</h1>\n{% endblock %}\n\n{% block page_content %}\n\n<div>{{ description }}</div>\n\n<a class=\"btn btn-primary\" href=\"/job_application?job_title={{ doc.job_title }}\">\n {{ _(\"Apply Now\") }}</a>\n\n{% endblock %}\n{% endraw %}\n\n5. Customizing List View\n\nIf you add a method get_list_view in the controller file (job_opening.py), you can set properties for the listview\n\ndef get_list_context(context):\n context.title = _(\"Jobs\")\n context.introduction = _('Current Job Openings')",
  "scrapedAt": "2025-10-22T00:03:08.008Z"
}