{
  "route": "framework/user/en/guides/integration/rest_api/oauth-2",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/integration/rest_api/oauth-2",
  "title": "oauth-2",
  "content": "Use the header Authorization: Bearer <access_token> to perform authenticated requests. You can receive a bearer token by combining the following two requests.\n\n Here is an amazing introduction to OAuth: OAuth 2.0 and OpenID Connect (in plain English)\n\nGET /api/method/frappe.integrations.oauth2.authorize\n\nGet an authorization code from the user to access ERPNext on his behalf.\n\nParams (in query):\n\nclient_id (string)\n\nID of your OAuth2 application\nstate (string)\n\nArbitrary value used by your client application to maintain state between the request and callback. The authorization server includes this value when redirecting the user-agent back to the client. The parameter should be used for preventing cross-site request forgery.\nresponse_type (string)\n\n\"code\"\nscope (string)\n\nThe scope of access that should be granted to your application.\nredirect_uri (string)\n\nCallback URI that the user will be redirected to, after the application is authorized. The authorization code can then be extracted from the params.\ncode_challenge_method (string)\n\n(OPTIONAL) Can be one from s256 or plain.\ncode_challenge (string)\n\n(OPTIONAL) Can be base64encode(sha256(random_string)) in case code_challenge_method=s256 or random_string in case code_challenge_method=plain. Refer https://tools.ietf.org/html/rfc7636#appendix-A\n\nExample:\n\ncurl -X POST https://{your frappe instance}/api/method/frappe.integrations.oauth2.authorize \\\n --data-urlencode 'client_id=511cb2ac2d' \\\n --data-urlencode 'state=444' \\\n # base64encode(sha256('420')) => 21XaP8MJjpxCMRxgEzBP82sZ73PRLqkyBUta1R309J0\n # --data-urlencode 'code_verifier=21XaP8MJjpxCMRxgEzBP82sZ73PRLqkyBUta1R309J0' \\\n --data-urlencode 'response_type=code'\n --data-urlencode 'scope=openid%20all' \\\n --data-urlencode 'redirect_uri=https://app.getpostman.com/oauth2/callback'\n\nReturns:\n\nHTTP Code: 200\ntext/html\n\nThis will open the authorize page which then redirects you to the redirect_uri.\n\nIf the user clicks 'Allow', the redirect URI will be called with an authorization code in the query parameters:\n\nhttps://{redirect uri}?code=plkj2mqDLwaLJAgDBAkyR1W8Co08Ud&state=444\n\nIf user clicks 'Deny' you will receive an error:\n\nhttps://{redirect uri}?error=access_denied\n\nToken Exchange for Authorization Code Grant with ID Token\n\nPOST /api/method/frappe.integrations.oauth2.get_token\nHeader Content-Type: application/x-www-form-urlencoded\n\n Note: This endpoint can also be used to get a refreshed access token. Just send the refresh_token in the request body.\n\nTrade the authorization code (obtained above) for an access token.\n\nParams (in body):\n\ngrant_type (string)\n\n\"authorization_code\"\ncode (string)\n\nAuthorization code received in redirect URI.\nclient_id (string)\n\nID of your OAuth2 application\nredirect_uri (string)\n\nRegistered redirect URI of client app\n\nExample:\n\ncurl -X POST https://{your frappe instance}/api/method/frappe.integrations.oauth2.get_token \\\n -H 'Content-Type: application/x-www-form-urlencoded' \\\n -H 'Accept: application/json' \\\n -d 'grant_type=authorization_code&code=wa1YuQMff2ZXEAu2ZBHLpJRQXcGZdr\n &redirect_uri=https%3A%2F%2Fapp.getpostman.com%2Foauth2%2Fcallback&client_id=af615c2d3a'\n\nFor testing purposes you can also pass the parameters in the URL like this (and open it in the browser):\n\nhttps://{your frappe instance}/api/method/frappe.integrations.oauth2.get_token?grant_type=authorization_code&code=A1KBRoYAN1uxrLAcdGLmvPKsRQLvzj&client_id=511cb2ac2d&redirect_uri=https%3A%2F%2Fapp.getpostman.com%2Foauth2%2Fcallback\n\nReturns:\n\n {\n \"access_token\": \"pNO2DpTMHTcFHYUXwzs74k6idQBmnI\",\n \"token_type\": \"Bearer\",\n \"expires_in\": 3600,\n \"refresh_token\": \"cp74cxbbDgaxFuUZ8Usc7egYlhKbH1\",\n \"scope\": \"openid all\",\n \"id_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o\"\n }\n\nToken Exchange for Authorization Code Grant with ID Token (PKCE)\n\nPOST /api/method/frappe.integrations.oauth2.get_token\nHeader Content-Type: application/x-www-form-urlencoded\n\nTrade the authorization code (obtained above) for an access token.\n\nParams (in body):\n\ngrant_type (string)\n\n\"authorization_code\"\ncode (string)\n\nAuthorization code received in redirect URI.\nclient_id (string)\n\nID of your OAuth2 application\nredirect_uri (string)\n\nRegistered redirect URI of client app\ncode_verifier (string)\n\nrandom_string used during Authorization Request with code_challenge_method and code_challenge.\n\nContent-Type: application/x-www-form-urlencoded\n\nExample:\n\ncurl -X POST https://{your frappe instance}/api/method/frappe.integrations.oauth2.get_token \\\n -H 'Content-Type: application/x-www-form-urlencoded' \\\n -H 'Accept: application/json' \\\n -d 'grant_type=authorization_code&code=wa1YuQMff2ZXEAu2ZBHLpJRQXcGZdr\n &redirect_uri=https%3A%2F%2Fapp.getpostman.com%2Foauth2%2Fcallback&client_id=af615c2d3a&code_verifier=420'\n\nFor testing purposes you can also pass the parameters in the URL like this (and open it in the browser):\n\nhttps://{your frappe instance}/api/method/frappe.integrations.oauth2.get_token?grant_type=authorization_code&code=A1KBRoYAN1uxrLAcdGLmvPKsRQLvzj&client_id=511cb2ac2d&redirect_uri=https%3A%2F%2Fapp.getpostman.com%2Foauth2%2Fcallback&code_verifier=420\n\nReturns:\n\n{\n \"access_token\": \"pNO2DpTMHTcFHYUXwzs74k6idQBmnI\",\n \"token_type\": \"Bearer\",\n \"expires_in\": 3600,\n \"refresh_token\": \"cp74cxbbDgaxFuUZ8Usc7egYlhKbH1\",\n \"scope\": \"openid all\",\n \"id_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o\"\n}\n\nRevoke Token Endpoint\n\nPOST /api/method/frappe.integrations.oauth2.revoke_token\nHeader: Content-Type: application/x-www-form-urlencoded\n\nRevoke token endpoint.\n\nParams:\n\ntoken\n\nAccess token to be revoked.\n\nReturns:\n\nAlways returns empty response with HTTP status code 200.\n\n {}\n\nOpen ID Connect id_token\n\nID Token is a JWT.\n\naud claim has registered client_id.\niss claim has frappe server url.\nsub claim has Frappe User's userid.\nroles claim has user roles.\nexp claim has expiration time.\niat claim has issued at time.\n\nExample: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkouIERvZSIsImVtYWlsIjoiakBkb2UuY29tIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNDIwMjIsImF1ZCI6ImNsaWVudF9pZCJ9.ZEdnrHjLbArahVTN19b4zoRFoBO5a2BakRkR82O1VU8\n\nVerify and extract it with PyJWT.\n\nimport jwt\n\nid_token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkouIERvZSIsImVtYWlsIjoiakBkb2UuY29tIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNDIwMjIsImF1ZCI6ImNsaWVudF9pZCIsInJvbGVzIjpbIlN5c3RlbSBNYW5hZ2VyIiwiU2FsZXMgTWFuYWdlciJdLCJub25jZSI6Ijc4OTEyMyIsImlzcyI6Imh0dHBzOi8vZXJwLmV4YW1wbGUuY29tIn0.F8Wbh5dtD1loZPltJLj_sqF9DZNeBvEbo-ITtf3UPqk\"\n\nclient_id = 'client_id'\nclient_secret = 'client_secret'\n\npayload = jwt.decode(\n id_token,\n audience=client_id,\n key=client_secret,\n algorithm=\"HS256\",\n options={\"verify_exp\": False}, # Enabled by default to verify expiration time\n)\n\nprint(payload)\n# Output\n\n{'sub': '1234567890', 'name': 'J. Doe', 'email': 'j@doe.com', 'iat': 1516239022, 'exp': 1516242022, 'aud': 'client_id', 'roles': ['System Manager', 'Sales Manager'], 'nonce': '789123', 'iss': 'https://erp.example.com'}\n\nOpenID User Info Endpoint\n\nRequest\n\nGET /api/method/frappe.integrations.oauth2.openid_profile\nHeader: Authorization: Bearer valid_access_token\n\nResponse\n\n{\n \"sub\": \"1234567890\",\n \"name\": \"J. Doe\",\n \"given_name\": \"J\",\n \"family_name\": \"Doe\",\n \"iss\": \"https://erp.example.com\",\n \"picture\": \"https://erp.example.com/files/jdoe.jpg\",\n \"email\": \"j@doe.com\",\n \"iat\": 1516239022,\n \"exp\": 1516242022,\n \"aud\": \"client_id\",\n \"roles\": [\"System Manager\", \"Sales Manager\"]\n}\n\nIntrospect Token Endpoint\n\nPOST /api/method/frappe.integrations.oauth2.introspect_token\nHeader: Content-Type: application/x-www-form-urlencoded\n\nRevoke token endpoint.\n\nParams:\n\ntoken_type_hint\n\naccess_token or refresh_token, defaults to access_token if nothing is provided\ntoken\n\nAccess token or Refresh Token to be introspected. Depends on token_type_hint\n\nReturns:\n\n{\n \"client_id\": \"511cb2ac2d\",\n \"trusted_client\": 1,\n \"active\": true,\n \"exp\": 1619523326,\n \"scope\": \"openid all\",\n \"sub\": \"1234567890\",\n \"name\": \"J. Doe\",\n \"given_name\": \"J\",\n \"family_name\": \"Doe\",\n \"iss\": \"https://erp.example.com\",\n \"picture\": \"https://erp.example.com/files/jdoe.jpg\",\n \"email\": \"j@doe.com\",\n \"iat\": 1516239022,\n \"exp\": 1516242022,\n \"aud\": \"511cb2ac2d\",\n \"roles\": [\"System Manager\", \"Sales Manager\"]\n}\n\nOR\n\n{\n \"active\": false,\n \"_server_messages\": \"...\"\n}\n\nFurther Reading\n\nPlease check Guides / Integration / How To Set Up Oauth to see how to create a new OAuth 2 client.\n\nContent-Type Header,\nAuthorization Header,\nOAuth 2 Specification,\nBearer token.\n\nAuthors:\n\nRaffael Meyer (raffael@alyf.de)\nRevant Nandgaonkar (revant@castlecraft.in)",
  "scrapedAt": "2025-10-22T00:03:24.073Z"
}