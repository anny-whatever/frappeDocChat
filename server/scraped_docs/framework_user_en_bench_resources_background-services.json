{
  "route": "framework/user/en/bench/resources/background-services",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/bench/resources/background-services",
  "title": "Running an active Frappe environment requires the running of various system",
  "content": "Running an active Frappe environment requires the running of various system\nlevel services and some Frappe processes.\n\nThe system level services, apart from your choice of database solutions and\nRedis will depend on your deployment architecture and strategy. As for the\nFrappe services, they are defined in the\nProcfile for development benches\nand config/supervisor.conf for production benches.\n\nSystem Processes\n\nThese processes are handled at a system level and may have configs setup via\nbench or some other Frappe deployment management tool.\n\nMariaDB/PostgreSQL (Database)\nRedis (Queues for background workers, and Caching)\nNGINX (Reverse Proxy for production deployment)\nSupervisor (Process Management for bench's non containerized production deployment)\n\nFrappe Processes\n\nThese processes may be triggered manually or via a process manager. However,\nthey are defined in Frappe's codebase and are managed by the same.\n\nWSGI Server\n\nThe WSGI server is responsible for responding to the HTTP requests to frappe. In\na development scenario, bench serve or bench start start the Werkzeug server.\nFor production setups, Bench uses Gunicorn (automatically configured in supervisor).\n\nRedis Worker Processes\n\nThe worker processes execute background jobs in the Frappe system.\n\nThese processes are automatically started when bench start is run and for production\nare configured in supervisor configuration.\n\nScheduler Process\n\nThe Scheduler process schedules enqeueing of scheduled jobs in the Frappe\nsystem. This process is automatically started when bench start is run and for\nproduction are configured in supervisor configuration.",
  "scrapedAt": "2025-10-22T00:04:34.391Z"
}