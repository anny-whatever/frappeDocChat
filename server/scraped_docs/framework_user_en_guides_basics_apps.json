{
  "route": "framework/user/en/guides/basics/apps",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/basics/apps",
  "title": "Frappe Apps are Python packages which use the Frappe platform. They can live",
  "content": "Frappe Apps are Python packages which use the Frappe platform. They can live\nanywhere on the Python\npath\nand must have an entry in the apps.txt file.\n\nCreating an app\n\nFrappe ships with a boiler plate for a new app. The command bench new-app\napp-name helps you start a new app by starting an interactive shell.\n\n % bench new-app sample_app\n App Name: sample_app\n App Title: Sample App\n App Description: This is a sample app.\n App Publisher: Acme Inc.\n App Icon: icon-linux\n App Color: #6DAFC9\n App Email: info@example.com\n App URL: http://example.com\n App License: MIT\n\nThe above command would create an app with the following directory structure.\n\n sample_app\n ├── license.txt\n ├── MANIFEST.in\n ├── README.md\n ├── sample_app\n │   ├── __init__.py\n │   ├── sample_app\n │   │   └── __init__.py\n │   ├── config\n │   │   ├── desktop.py\n │   │   └── __init__.py\n │   ├── hooks.py\n │   ├── modules.txt\n │   ├── patches.txt\n │   └── templates\n │   ├── generators\n │   │   └── __init__.py\n │   ├── __init__.py\n │   ├── pages\n │   │   └── __init__.py\n │   └── statics\n └── setup.py\n\nThe boiler plate contains just enough files to show your app icon on the [Desk].\n\nFiles in the app\n\nhooks.py\n\nThe hooks.py file defines the metadata of your app and integration points\nwith other parts of Frappe or Frappe apps. Examples of such parts include task\nscheduling or listening to updates to different documents in the system. For\nnow, it just contains the details you entered during app creation.\n\n app_name = \"sample-app\"\n app_title = \"Sample App\"\n app_publisher = \"Acme Inc.\"\n app_description = \"This is a sample app.\"\n app_icon = \"fa-linux\"\n app_color = \"black\"\n app_email = \"info@example.com\"\n app_url = \"http://example.com\"\n app_version = 0.0.1\n\nmodules.txt\n\nModules in Frappe help you organize Documents in Frappe and they are defined in\nthe modules.txt file in your app. It is necessary for every [DocType] to be\nattached to a module. By default a module by the name of your app is added.\nAlso, each module gets an icon on the [Desk]. For example, the [ERPNext] app is\norganized in the following modules.\n\naccounts\n buying\n home\n hr\n manufacturing\n projects\n selling\n setup\n stock\n support\n utilities\n contacts\n\nAdding app to a site\n\nOnce you have an app, whether it's the one you just created or any other you\ndownloaded, you are required to do the following things.\n\nDownload the app via git\n\nbench get-app https://github.com/org/app_name\n\nInstall the app to your site\n\nbench --site site_name install-app app_name",
  "scrapedAt": "2025-10-22T00:02:16.635Z"
}