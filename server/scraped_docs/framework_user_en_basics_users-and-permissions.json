{
  "route": "framework/user/en/basics/users-and-permissions",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/basics/users-and-permissions",
  "title": "users-and-permissions",
  "content": "Frappe comes with a user authentication system. It handles user accounts, role based permissions and cookie based user sessions.\n\nUser authentication system in Frappe comes with a lot of features out of the box:\n\nUser\nRole\nDocType Permissions\nPermission Level\nRole Permission Manager\nUser Permissions\nRestricting Views and Forms\nPassword Hashing\nPassword strength checking\nThrottling of login attempts\nThird party authentication like OAuth, Google, Facebook, etc\n\nUser and Role\n\nA User record represents an authenticated user who can perform authorized actions in the system. A User can have multiple roles assigned to it. A Role describes what actions a User can perform on a DocType.\n\n User Roles\n\nFor example, the role Blogger has read, write and create permission on the doctype Blog Post, but only read permission on Blog Category.\n\n Role Blogger\n\nDocType Permissions\n\nDocTypes can have a default set of Roles applied when you install your app. To configure roles for a DocType you must add them in the Permissions table in DocType.\n\n DocType Permissions\n\nIf you expand the row, you will see many more options that can be configured. DocType Permissions\n\nHere is a list of them with their explanation:\n\n Option\n Explanation\n\n Level\n Permission Level assigned to this role\n\n If the user is owner\n The restrictions will apply only if the user is the one who created that document\n\n Read\n Allow read access to the document\n\n Write\n Allow edit access to the document\n\n Create\n Allow create access to the document\n\n Delete\n Allow user to delete the document\n\n Submit\n Allow user to submit the document\n\n Cancel\n Allow user to cancel the document\n\n Amend\n Allow user to amend the document\n\n Report\n Allow user to view the report view\n\n Export\n Allow user to export records in Excel/CSV\n\n Import\n Allow user to import records using the Data Import Tool\n\n Set User Permissions\n Allow user to apply user permissions for other users\n\n Share\n Allow user to share the document with other users\n\n Print\n Allow user to print the document or generate PDF\n\n Email\n Allow user to send emails for that document\n\nPermission Level\n\nPermission Levels can be used to group fields in a document and apply separate roles to each level. By default all fields have permlevel set as 0.\n\n Permission Level\n\nRole Permissions Manager\n\nRole Permissions Manager is a user tool to manage role permissions. The default set of permissions show up here and can be overridden.\n\n \n\nUser Permissions\n\nUser Permissions are another set of rules that can be applied per user basis. It can be used to restrict documents which contain a specific value for a Link field.\n\nFor example, to restrict the User John such that he can only view Blog Posts that were created by him, i.e, Blogger John. A user permission record with the following values should be created.\n\n User Permission Record\n\nAfter creating the user permission configuration, when the User logs in to see the Blog Post list, he will have a restricted view of blog posts that were created by him.\n\n Restricted Blog Post List\n\nAutomatic Roles\n\nCertain roles are automatically hidden to users, this simplifies writing doctypes that need catch-all permissions. Following are automatic roles:\n\n\"Guest\" - This role is allocated to everyone, including unauthenticated users.\n\"All\"- This role is allocated to all registered users. This includes website users.\n\"Administrator\" - This role is only allocated to Administrator user that is created by default.\n\"Desk User\" - [New in v15] This role is allocated to all users whose user type is \"System User\" i.e. they are system users and not website users.\n\nRestricting Views and Forms\n\nFrappe Framework allows you to configure what modules, doctypes and views are visible to the user. To configure which modules are shown to a user go to the Allow Modules section of the User form.\n\n \n\nTo hide a doctype from a User, remove the read permission from a Role using the Role Permissions Manager.\n\nTo control permissions for Pages and Reports, use the Role Permission for Page and Report tool.\n\n \n\nPassword Hashing\n\nFrappe handles password hashing out of the box. They are encrypted and saved in a separate database table named __Auth.\n\nMariaDB [_baa0f26509a564b6]> select * from __Auth;\n+---------+------------------+-----------+-----------------------------------------------\n| doctype | name | fieldname | password\n+---------+------------------+-----------+-----------------------------------------------\n| User | Administrator | password | $pbkdf2-sha256$29000$Xss5pxSC8F5rDSHEOEdo7Q$in\n| User | test@erpnext.com | password | $pbkdf2-sha256$29000$y7mXMoZQau09RwiBsLaWsg$h.\n+---------+------------------+-----------+-----------------------------------------------\n\nPassword Policy\n\nFrappe also supports password strength checking. It can be enabled from System Settings in the Security section. The Minimum Password Score field validates how strong the password should be.\n\n Password Policy\n\nLogin Attempts\n\nFrappe allows you to configure how many consecutive login attempts should be allowed before locking the account for a set time period.\n\n \n\nThird Party Authentication\n\nFrappe supports third party login providers. To setup a login provider you need to setup a Social Login Key. Learn more about it here.",
  "scrapedAt": "2025-10-22T00:01:19.479Z"
}