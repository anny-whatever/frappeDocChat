{
  "route": "framework/user/en/bench/bench-commands",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/bench/bench-commands",
  "title": "This page is concerned only with the commands that exist in the bench project,",
  "content": "This page is concerned only with the commands that exist in the bench project,\nthat are a direct part of the CLI tool. These commands are defined under the\nfrappe/bench.\n\n For references of any Framework commands, checkout Frappe\n Commands.\n\nUsing the bench CLI\n\n➜ bench\nUsage: bench [OPTIONS] COMMAND [ARGS]...\n\n Bench manager for Frappe\n\nOptions:\n --version\n --help Show this message and exit.\n\nCommands:\n backup Backup single site\n backup-all-sites Backup all sites in current bench\n config Change bench configuration\n disable-production Disables production environment for the bench.\n download-translations Download latest translations\n exclude-app Exclude app from updating\n find Finds benches recursively from location\n get-app Clone an app from the internet or filesystem and...\n\nSimilarly, all available flags and options can be checked for commands\nindividually by executing them with the --help flag. The init command for\ninstance:\n\n➜ bench init --help\nUsage: bench init [OPTIONS] PATH\n\n Initialize a new bench instance in the specified path\n\nOptions:\n --python TEXT Path to Python Executable.\n --ignore-exist Ignore if Bench instance exists.\n --apps_path TEXT path to json files with apps to install\n after init\n\nCommands\n\nUnder Click's structure, bench is the main command group, under which there\nare three main groups of commands in bench currently, namely\n\nGeneral Commands\n\nA set of commands that don't classify broadly in the other commands. Commands\nsuch as init, get-app, find come under this category. These commands\nbelong directly to the bench group so they can be invoked directly prefixing\neach with bench in your shell. Therefore, the usage for these commands is as\n\n➜ bench COMMAND [ARGS]...\n\nFrequently Used\n\ninit: Initialize a new bench instance in the specified path. This sets up\na complete bench folder with an apps folder which contains all the Frappe\napps available in the current bench, sites folder that stores all site data\nseparated by individual site folders, config folder that contains your\nredis, NGINX and supervisor configuration files. The env folder consists of\nall python dependencies of the current bench and installed Frappe\napplications have.\nrestart: Restart web, supervisor, systemd processes units. Used in the\nproduction setup.\nupdate: If executed in a bench directory, without any flags will backup,\npull, setup requirements, build, run patches and restart bench. Using\nspecific flags will only do certain tasks instead of all.\nmigrate-env: Migrate Virtual Environment to desired Python version. This\nregenerates the env folder with the specified Python version.\nretry-upgrade: Retry a failed upgrade\ndisable-production: Disables production environment for the bench.\nrenew-lets-encrypt: Renew Let's Encrypt certificate for site SSL.\nbackup: Backup single site data. Can be used to backup files as well.\nbackup-all-sites: Backup all sites in the current bench.\nget-app: Download an app from the internet or filesystem and set it up in\nyour bench. This clones the git repo of the Frappe project and installs it in\nthe bench environment.\nremove-app: Completely remove the specified Frappe App from the current\nbench and re-build assets if not installed on any site.\nexclude-app: Exclude app from updating during a bench update\ninclude-app: Include app for updating. All Frappe applications are\nincluded by default when installed.\nremote-set-url: Set app remote url\nremote-reset-url: Reset app remote url to frappe official\nremote-urls: Show apps remote url\nswitch-to-branch: Switch all apps to specified branch, or specify apps\nseparated by space\nswitch-to-develop: Switch Frappe and ERPNext to develop branch\n\nAdvanced Setup-based\n\nset-nginx-port: Set NGINX port for site\nset-ssl-certificate: Set SSL certificate path for site\nset-ssl-key: Set SSL certificate private key path for site\nset-url-root: Set URL root for site\nset-mariadb-host: Set MariaDB host for bench\nset-redis-cache-host: Set Redis cache host for bench\nset-redis-queue-host: Set Redis queue host for bench\nset-redis-socketio-host: Set Redis socketio host for bench\nuse: Set default site for bench\ndownload-translations: Download latest translations\n\nDevelopment\n\nstart: Start Frappe development processes. Uses the Procfile to start the\nFrappe development environment.\nsrc: Prints bench source folder path, which can be used to cd into the\nbench installation repository by cd $(bench src).\nfind: Finds benches recursively from location or specified path.\npip: Use the current bench's pip to manage Python packages. For help\nabout pip usage: bench pip help [COMMAND] or bench pip [COMMAND] -h.\nnew-app: Create a new Frappe application under apps folder.\n\nRelease bench\n\nrelease: Create a release of a Frappe application\nprepare-beta-release: Prepare major beta release from develop branch\n\nSetup Commands\n\nThis command group consists of commands used to manipulate the requirements and\nthe environment required by your Frappe environment. The setup commands used for\nsetting up the Frappe environment in the context of the current bench need to be\nexecuted using bench setup as the prefix. So, the general usage of these\ncommands is as\n\n➜ bench setup COMMAND [ARGS]...\n\nsudoers: Add commands to sudoers list for allowing bench commands\nexecution without root password\nenv: Setup Python's virtual environment for your bench. This sets up a\nenv folder under the root of the bench directory.\nredis: Generates configuration for Redis\nfonts: Add Frappe fonts to system\nconfig: Generate or over-write sites/common_site_config.json\nbackups: Add cronjob for bench backups\nsocketio: Setup node dependencies for socketio server\nrequirements: Setup Python and Node dependencies\nmanager: Setup bench-manager.local site with the Bench\nManager app, a GUI for bench\ninstalled on it.\nprocfile: Generate Procfile for bench start\nproduction: Setup a Frappe production environment for the specified user.\nThis installs ansible, NGINX, supervisor, fail2ban and generates the\nrespective configuration files.\nnginx: Generate configuration files for NGINX\nfail2ban: Setup fail2ban, an intrusion prevention software framework that\nprotects computer servers from brute-force attacks\nsystemd: Generate configuration for systemd\nfirewall: Setup firewall for system\nssh-port: Set SSH Port for system\nreload-nginx: Checks NGINX config file and reloads service\nsupervisor: Generate configuration for supervisor\nlets-encrypt: Setup lets-encrypt SSL for site\nwildcard-ssl: Setup wildcard SSL certificate for multi-tenant bench\nadd-domain: Add a custom domain to a particular site\nremove-domain: Remove a custom domain from a site\nsync-domains: Check if there is a change in domains. If yes, updates the\ndomains list.\nrole: Install dependencies via ansible roles\n\nConfig Commands\n\nThe config command group deals with making changes in the current bench (not the\nCLI tool) configuration. The config group commands are used for manipulating\nconfigurations in the current bench context. The usage for these commands is as\n\n➜ bench config COMMAND [ARGS]...\n\nset-common-config: Set value in common config with parameters -c, configs\nor --config\nremove-common-config: Remove specific keys from current bench's common\nconfig\nupdate\\bench\\on\\_update: Enable/Disable bench updates on running bench\nupdate\nrestart\\supervisor\\on\\_update: Enable/Disable auto restart of\nsupervisor processes\nrestart\\systemd\\on\\_update: Enable/Disable auto restart of systemd\nunits\ndns\\_multitenant: Enable/Disable bench multitenancy on running bench\nupdate\nserve\\default\\site: Configure nginx to serve the default site on port\n80\nhttp\\_timeout: Set HTTP timeout\n\nInstall Commands\n\nThe install command group deals with commands used to install system\ndependencies for setting up a Frappe environment. The usage for these commands\nis as\n\n bench install COMMAND [ARGS]...\n\nprerequisites: Installs pre-requisite libraries, essential tools like\nb2zip, htop, screen, vim, x11-fonts, python libs, cups and Redis\nnodejs: Installs Node.js v8\nnginx: Installs NGINX. If user is specified, sudoers is setup for that\nuser\npacker: Installs Oracle virtualbox and packer 1.2.1\npsutil: Installs psutil via pip\nmariadb: Install and setup MariaDB of specified version and root password\nwkhtmltopdf: Installs wkhtmltopdf v0.12.3 for linux\nsupervisor: Installs supervisor. If user is specified, sudoers is setup\nfor that user\nfail2ban: Install fail2ban, an intrusion prevention software framework\nthat protects computer servers from brute-force attacks\nvirtualbox: Installs virtualbox.\n\nGeneral Usage\n\nThis section covers the general usage of the Bench CLI, enough to get you\nfamiliar with the basic usage.\n\nCreate a new bench\n\nThe init command will create a bench directory with the frappe framework\n installed. It will be setup for periodic backups.\n\n➜ bench init frappe-bench && cd frappe-bench\n\nAdd a site\n\nFrappe apps are run by frappe sites and you will have to create at least one\n site. The new-site command allows you to do that.\n\n➜ bench new-site site1.local\n\nAdd apps\n\nThe get-app command gets remote frappe apps from a remote git repository and\n installs them. Example: erpnext\n\n➜ bench get-app erpnext https://github.com/frappe/erpnext\n\nInstall apps\n\nTo install an app on your new site, use the bench install-app command.\n\n➜ bench --site site1.local install-app erpnext\n\nStart bench\n\nTo start using the bench, use the bench start command\n\n➜ bench start\n\nTo login to Frappe / ERPNext, open your browser and go to\n [your-external-ip]:8000, probably localhost:8000\n\nThe default username is \"Administrator\" and password is what you set when you\n created the new site.\n\nUpdate bench\n\nUpdate all apps and sites from your bench directory. This operation performs\n backups, sets up requirements, build asstes, runs migrations and restarts your\n process manager for you.\n\n➜ bench update\n\nUpdate Bench config\n\nTo update the common site config for your bench, you can use the\n set-common-config and remove-common-config commands under the config\n command group. To learn more about Frappe Site configurations available,\n checkout the Site Config and Bench Config docs.\n\nTo add or update an existing config key, you can run something like\n\n➜ bench config set-common-config -c enable_frappe_logger true\n\nTo remove an existing config key, you can run something like\n\n➜ bench config remove-common-config enable_frappe_logger\n\nBench Manager\n\nFor a UI based approach to managing your deployments, checkout Bench\nManager.\n\n➜ bench setup manager\n\nYou can set it up easily on any existing bench by running the above command.\n\nWhat this does?\n\nCreate a new site bench-manager.local\nGet the bench_manager app\nInstall the Bench Manager app on the site bench-manager.local\n\nYou can use this site to manage your bench operations through\nbench-manager.local's /desk view.",
  "scrapedAt": "2025-10-22T00:04:03.146Z"
}