{
  "route": "framework/user/en/guides/app-development/generic-oauth-client",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/app-development/generic-oauth-client",
  "title": "Connected App",
  "content": "Connected App\n\nConnected App stores the client ID and secret, scopes and endpoints of the platform you're integrating with.\n\nGetting started\n\n This example uses Google, but you can use any service supporting OAuth 2.0.\n\nYour integration will most probably need a settings doctype (for example, \"Google Settings\"). Here you create a link field to Connected App. A System Manager can later create a Connected App, enter the client credentials and link it to your integration. You will know which Connected App belongs to your integration via your settings DocType.\n\ngoogle_settings = frappe.get_single('Google Settings')\nconnected_app_name = google_settings.get('connected_app')\n\nconnected_app = frappe.get_doc('Connected App', connected_app_name)\n\nNow you have an instance of your Connected App, containing the credentials and endpoint URIs. If a user didn't connect yet, they can open the Connected App and click the \"Connect to ...\" button on the top right. Alternatively, you can get the authorization URI and use it for your own custom button or redirect:\n\nauthorization_uri = connected_app.initiate_web_application_flow() # optional\n\nOnce the user is authorized, you can get an authenticated session like this:\n\nsession = connected_app.get_oauth2_session()\n\n If the user is not authenticated at this time, they will be redirected to the authentication page.\n\nNow you can retrieve any allowed resource from the target platform:\n\nsession.get('https://www.googleapis.com/oauth2/v2/userinfo')\n\nIf the access token is expired, the session will automatically try to refresh it.",
  "scrapedAt": "2025-10-22T00:02:45.666Z"
}