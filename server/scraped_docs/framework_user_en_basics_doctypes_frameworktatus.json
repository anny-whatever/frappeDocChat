{
  "route": "framework/user/en/basics/doctypes/frameworktatus",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/basics/doctypes/frameworktatus",
  "title": "frameworktatus",
  "content": "Frappe uses the concept of a \"Docstatus\" to keep track of the status of transactions. The docstatus will always have one of the following three values:\n\nDraft (value: 0)\nSubmitted (value: 1)\nCancelled (value: 2)\n\nDocuments that are _not submittable_ will always remain in the \"draft\" state. Documents that are _submittable_ can optionally proceed from the draft state to the \"submitted\", and then to the \"cancelled\" state.\n\nDocuments in the submitted and cancelled state cannot be edited, with one execption: for individual fields we can explicitly allow edits, even when the document is in the submitted state.\n\nIn the backend code we have a helper class DocStatus that can be used as follows:\n\nimport frappe\nfrom frappe.model.docstatus import DocStatus\n\ndraft_invoice_names = frappe.get_list(\n \"Sales Invoice\",\n filters={\"docstatus\": DocStatus.draft()},\n pluck=\"name\"\n)\n\ninvoice_doc = frappe.get_doc(\"Sales Invoice\", draft_invoice_names[0])\ninvoice_doc.docstatus == DocStatus.draft() # -> True\ninvoice_doc.docstatus.is_draft() # -> True\ninvoice_doc.docstatus.is_submitted() # -> False\ninvoice_doc.docstatus.is_cancelled() # -> False\n\ninvoice_doc.submit()\ninvoice_doc.docstatus == DocStatus.submitted() # -> True\ninvoice_doc.docstatus.is_draft() # -> False\ninvoice_doc.docstatus.is_submitted() # -> True\ninvoice_doc.docstatus.is_cancelled() # -> False\n\ninvoice_doc.cancel()\ninvoice_doc.docstatus == DocStatus.cancelled() # -> True\ninvoice_doc.docstatus.is_draft() # -> False\ninvoice_doc.docstatus.is_submitted() # -> False\ninvoice_doc.docstatus.is_cancelled() # -> True\n\nThe docstatus gets stored as an integer value in each Doctype table of the database.",
  "scrapedAt": "2025-10-22T00:01:25.000Z"
}