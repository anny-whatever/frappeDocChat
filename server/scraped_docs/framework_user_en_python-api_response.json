{
  "route": "framework/user/en/python-api/response",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/python-api/response",
  "title": "Here, let's take a look into how responses are built in Frappe, and how you may",
  "content": "Here, let's take a look into how responses are built in Frappe, and how you may\nbe able to use them in your Frappe apps or scripts.\n\nIf you have already gone through the Router\nDocumentation, you might've noticed the\nbuild_response function that Frappe internally utilizes to build responses\ndepending on the type of the content. The logic that defines this behaviour is a\npart of the module\nfrappe.utils.response,\nof which build_response is the meat and potatoes.\n\ndef build_response(response_type=None):\n if \"docs\" in frappe.local.response and not frappe.local.response.docs:\n del frappe.local.response[\"docs\"]\n\n response_type_map = {\n \"csv\": as_csv,\n \"txt\": as_txt,\n \"download\": as_raw,\n \"json\": as_json,\n \"pdf\": as_pdf,\n \"page\": as_page,\n \"redirect\": redirect,\n \"binary\": as_binary,\n }\n\n return response_type_map[frappe.response.get(\"type\") or response_type]()\n\nThe above snippet represents the current implementation of build_response\nwhich maps different functions that act as handlers for different content types.\nLet's take a deeper look into the response handler for the \"download\"\nresponse_type in Frappe v13.\n\ndef as_raw():\n response = Response()\n response.mimetype = (\n frappe.response.get(\"content_type\")\n or mimetypes.guess_type(frappe.response[\"filename\"])[0]\n or \"application/unknown\"\n )\n response.headers[\"Content-Disposition\"] = (\n f'{frappe.response.get(\"display_content_as\", \"attachment\")};'\n f' filename=\"{frappe.response[\"filename\"].replace(\" \", \"_\")}\"'\n ).encode(\"utf-8\")\n response.data = frappe.response[\"filecontent\"]\n return response\n\nDepending on the value of the Content-Disposition header, the browser\nreceiving the response may behave differently. If unset, the value defaults to\n\"attachment\".\n\nIf frappe.response.display_content_as is set to \"inline\", it indicates\nthat the content is expected to be displayed inline in the browser, that is, as\na Web page or as part of a Web page, while \"attachment\" means the contents\nare to be downloaded and saved locally.\n\nTo create an API endpoint that would directly download the file you require, you\ncould craft something like the following to download the file directly.\n\n@frappe.whitelist()\ndef download(name):\n file = frappe.get_doc(\"File\", name)\n frappe.response.filename = file.file_name\n frappe.response.filecontent = file.get_content()\n frappe.response.type = \"download\"\n frappe.response.display_content_as = \"attachment\"",
  "scrapedAt": "2025-10-22T00:01:47.413Z"
}