{
  "route": "framework/user/en/tutorial/create-a-site",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/tutorial/create-a-site",
  "title": "create-a-site",
  "content": "Each site comes with a database. They may be customized throughsite specific scripting or Apps may be installed on them.\n\nCreate a new site\n\nTo create a new site, run the following command from the frappe-bench directory:\n\n$ bench new-site library.localhost\nMySQL root password:\n\nInstalling frappe...\nUpdating DocTypes for frappe : [========================================] 100%\nSet Administrator password:\n*** Scheduler is disabled ***\nCurrent Site set to library.localhost\n\nThis command will create a new database, so you need to enter your MariaDB root password. It will also ask to set the password for the Administrator user, just set a password that you won't forget. This will be useful later.\n\nNow, you will have a new folder named library.localhost in the sites directory.\n\nIf site creation fails for any reason, you'll be prompted to roll back the changes. This will delete the library.localhost or equivalent in your sites directory, and delete the database/user that was created. This will allow you to easily retry without having to manually cleanup the unusable site.\n\nSite Directory Structure\n\nThe site directory structure will look something like this:\n\nsites/library.localhost\n├── indexes\n│ └── web_routes\n├── locks\n├── logs\n├── private\n│ ├── backups\n│ └── files\n├── public\n│ └── files\n└── site_config.json\n\nThe indexes folder has indexes generated via Website Search.\n\nThe locks folder maintains file based locks over in-site documents as well as indicators of the state of the site itself.\n\nAs you can see, the private folder will contain any database backups and private files. Private files are user uploaded files that need authentication to be accessible.\n\nThe public folder will contain files that are accessible without authentication. This can contain website images that should be accessible without login.\n\nThe site_config.json file contains configuration that is specific to this site which should not be version controlled. This is similar to an environment variables file. If you look at the contents of the file, it contains the database configuration values for this site.\n\n{\n \"db_name\": \"_ad03fa1a016ca1c4\",\n \"db_password\": \"pz1d2gN5y35ydRO5\",\n \"db_type\": \"mariadb\"\n}\n\nAccess site in your browser\n\nbench allows you to create multiple sites and access them separately in the browser on the same port. This is what we call multi-tenancy support in bench.\n\nFrappe will identify which site to serve by matching the hostname of the request with the site name, so you should be able to access your site on http://library.localhost:8000\n\nIf this does not work for you it's because we have to tell our operating system that library.localhost should point to localhost. To do that, you can add the following entry to your /etc/hosts file.\n\n127.0.0.1 library.localhost\n\nThis will map library.localhost to localhost. Bench has a convenient command to do just that.\n\n$ bench --site library.localhost add-to-hosts\n\nThis will ask for your root password and will add an entry to your /etc/hosts file.\n\n \n\nGreat, now you can access your site at http://library.localhost:8000. Congratulations for making it this far.\n\nInstall app on site\n\nTo install our Library Management app on our site, run the following command:\n\n$ bench --site library.localhost install-app library_management\n\nInstalling library_management...\n\nTo confirm if the app was installed, run the following command:\n\n$ bench --site library.localhost list-apps\nfrappe\nlibrary_management\n\nYou should see frappe and library_management as installed apps on your site.\n\n When you create a new site, the frappe app is installed by default.\n\nLogin to Desk\n\nTo create DocTypes in our app, we must log in to Desk. Go to http://library.localhost:8000 and it should show you a login page.\n\nEnter Administrator as the user and password that you set while creating the site.\n\n \n\nAfter successful login, you will see the setup wizard. This is a one-time setup wizard used to set up localization details for your site. Go ahead, select your language, and complete the wizard.\n\nGood job making it this far!\n\nYou should see the Desk that looks something like this:\n\n \n\nSite commands\n\nWe ran a couple of bench commands with the --site option. These commands are called site commands.\n\nHere are some of the useful site commands.\n\nPython Console\n\n# access the python console\n$ bench --site library.localhost console\nApps in this namespace:\nfrappe, library_management\n\nIn [1]:\n\nMariaDB Console\n\n# access the mariadb console\n$ bench --site library.localhost mariadb\nWelcome to the MariaDB monitor. Commands end with ; or \\g.\nYour MariaDB connection id is 2333498\nServer version: 10.4.13-MariaDB Homebrew\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [_ad03fa1a016ca1c4]>\n\nDatabase Backup\n\n$ bench --site library.localhost backup\nBackup Summary for library.localhost at 2020-10-06 23:21:17.277960\nConfig : ./library.localhost/private/backups/20201006_232116-library_test-site_config_backup.json 94.0B\nDatabase: ./library.localhost/private/backups/20201006_232116-library_test-database.sql.gz 217.4KiB\nBackup for Site library.localhost has been successfully completed\n\nYou can see a list of all site commands by running the following command:\n\n$ bench --help\nUsage: bench frappe [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n --site TEXT\n --profile Profile\n --verbose Verbose\n --force Force\n --help Show this message and exit.\n\nCommands:\n add-system-manager Add a new system manager to a site\n add-to-email-queue Add an email to the Email Queue\n add-to-hosts Add site to hosts\n backup Backup\n browse Opens the site on web browser\n build Minify + concatenate JS and CSS files, build...\n build-message-files Build message files for translation\n build-search-index\n bulk-rename Rename multiple records via CSV file\n clear-cache Clear cache, doctype cache and defaults\n clear-website-cache Clear website cache\n console Start ipython console for a site\n data-import Import documents in bulk from CSV or XLSX...\n destroy-all-sessions Clear sessions of all users (logs them out)\n\nNext: Create a DocType",
  "scrapedAt": "2025-10-22T00:01:04.746Z"
}