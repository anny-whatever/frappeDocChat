{
  "route": "framework/user/en/guides/integration/rest_api/manipulating_documents",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/integration/rest_api/manipulating_documents",
  "title": "manipulating_documents",
  "content": "A DocTypes is a specific type of document, for example: Customer, Employee or Item.\n\nA DocumentName is the unique ID of a Document, for example: CUST-00001, EMP-00001 or ITEM-00001.\n\nAuthentication is missing in the following examples. See [Basic Authentication] and [OAuth2] for more.\n\nGET /api/resource/{DocType}\n\nGet a list of documents of this DocType.\n\nParams (in path):\n\nDocType (string)\n\nThe DocType you'd like to receive. For example, 'Customer'.\n\nParams (in query):\n\nfields []\n\nBy default, only the 'name' field will be returned. To add more fields, you can pass the fields parameter. For example, fields=[\"name\",\"country\"]\nfilters [[(string)]]\n\nYou can filter the listing using SQL conditions by passing them in the filters parameter. Each condition is an array of the format, [{doctype}, {field}, {operator}, {value}]. For example, filters=[[\"Customer\", \"country\", \"=\", \"India\"]]\nlimit_page_length (int)\n\nAll listings will be paginated. With this parameter you can change the page size (how many items are teturned at once). Default: 20.\nlimit_start (int)\n\nTo request successive pages, pass a multiple of your limit_page_length as limit_start. For example, to request the second page, pass limit_start as 20.\n\nExample:\n\nGet at most 20 Names (IDs) of all Customers whose phone number is 4915227058038.\n\ncurl -X GET https://{your frappe instance}/api/resource/Customer?fields=[\"name\"]\\\n &filters=[[\"Customer\",\"phone\",\"=\",\"4915227058038\"]]\n\nReturns:\n\n {\n \"data\": [\n {\n \"name\": \"CUST-00001\"\n },\n ]\n }\n\nPOST /api/resource/{DocType}\n\nCreate a new document of this DocType.\n\nParams (in path):\n\nDocType (string)\n\nThe DocType you'd like to create. For example, 'Customer'.\n\nContent-Type: application/json\n\nRequest Body: {\"fieldname\": value}\n\nExample:\n\nCreate a new Lead named Mustermann.\n\ncurl -X POST https://{your frappe instance}/api/resource/Lead \\\n -H 'Content-Type: application/json' \\\n -H 'Accept: application/json' \\\n -d '{\"lead_name\":\"Mustermann\"}'\n\nGET /api/resource/{DocType}/{DocumentName}\n\nRetrieve a specific document by name (ID).\n\nParams (in path):\n\nDocType (string)\n\nThe type of the document you'd like to get. For example, 'Customer'.\nDocumentName (string)\n\nThe name (ID) of the document you'd like to get. For example, 'EMP-00001'.\n\nExample:\n\nGet the Customer with Name (ID) CUST-00001.\n\ncurl -X GET https://{your frappe instance}/api/resource/Customer/CUST-00001\n\nPUT /api/resource/{DocType}/{DocumentName}\n\nUpdate a specific document. This acts like a PATCH HTTP request in which you do not have to send the whole document but only the parts you want to change.\n\nParams (in path):\n\nDocType (string)\n\nThe type of the document you'd like to update. For example, 'Customer'.\nDocumentName (string)\n\nThe name (ID) of the document you'd like to update. For example, 'EMP-00001'.\n\nContent-Type: application/json\n\nRequest Body: {\"fieldname\": value}\n\nExample:\n\nUpdate Next Contact Date.\n\ncurl -X PUT https://{your frappe instance}/api/resource/Lead/LEAD-00001 \\\n -H 'Accept: application/json' \\\n -H 'Content-Type: application/json' \\\n -d '{\"contact_date\":\"2018-10-08\"}'\n\nReturns:\n\n{\n \"data\": {\n \"doctype\": \"Lead\",\n \"name\": \"LEAD-00001\",\n \"contact_date\": \"2018-10-08\",\n \"...\": \"...\"\n }\n}\n\nDELETE /api/resource/{DocType}/{DocumentName}\n\nParams (in path):\n\nDocType (string)\n\nThe type of the document you'd like to delete. For example, 'Customer'.\nDocumentName (string)\n\nThe name (ID) of the document you'd like to delete. For example, 'EMP-00001'.\n\nFurther Reading\n\nHTTP Headers:\n\nContent-Type\nAccept\nAuthorization\n\nAuthor: Raffael Meyer (raffael@alyf.de)",
  "scrapedAt": "2025-10-22T00:03:26.268Z"
}