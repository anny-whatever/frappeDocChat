{
  "route": "framework/user/en/guides/reports-and-printing/print-format-for-reports",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/reports-and-printing/print-format-for-reports",
  "title": "print-format-for-reports",
  "content": "In version 4.1 we introduce Report Print Formats. These are HTML templates that you can use to format Query Report data for printing.\n\n1. Creating New Print Formats\n\nTo create a new Print Format, just drop in a .html file in the folder of the query report. For example, for the General Ledger report in ERPNext, you can drop in a file called general_ledger.html along side the .js and .py files.\n\nTree Of erpnext/accounts/general_ledger\n\ngeneral_ledger/\n├── __init__.py\n├── general_ledger.html\n├── general_ledger.js\n├── general_ledger.json\n└── general_ledger.py\n \n\n2. Templating\n\nFor templating, we use an adapted version of John Resig's microtemplating script. If you know Javascript, it is very easy to follow this templating language.\n\nHere are some examples (from John Resig's Blog):\n\nExample: Properities:\n\n![](<%=profile_image_url%>)\n\n**[<%=from_user%>](<%=from_user%>):** <%=text%>\n\nExample: Code structures, Loops\n <% for ( var i = 0; i < users.length; i++ ) { %>\n- [<%=users[i].name%>](<%=users[i].url%>)\n<% } %>\n \n\n Note: It is important to note that you should not use single quotes (') in your template as the engine cannot handle them effectively.\n\n3. Data\n\nData is available to the template as:\n\ndata: this is a list of records, with each record as an object with slugified properties from labels. For example \"Posting Date\" becomes \"posting_date\"\nfilters: filters set in the report\nreport: reportview object\n\n4. Example\n\nHere is how the General Ledger Report is built:\n\nGeneral Ledger Print Format Template\n\nHere is what the report looks like:\n\nComments:\n\nBootstrap Stylesheet is pre-loaded.\nYou can use all global functions like fmt_money and dateutil.\nTranslatable strings should be written as __(\"text\")\nYou can create modules and import using {% include \"templates/includes/formats/common_format\" %}",
  "scrapedAt": "2025-10-22T00:02:58.124Z"
}