{
  "route": "framework/user/en/api/py-dialog",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/api/py-dialog",
  "title": "py-dialog",
  "content": "Frappe provides a group of standard, interactive and flexible dialogs that are easy to configure and use. There's also a more extensive API for Javascript.\n\nfrappe.msgprint\n\nfrappe.msgprint(msg, title, raise_exception, as_table, as_list, indicator, primary_action, is_minimizable, wide, realtime)\n\nThis method works only within a request / response cycle. It shows a message to the user logged in to Desk who initiated the request.\n\nThe argument list includes:\n\nmsg: The message to be displayed\ntitle: Title of the modal\nas_table: If msg is a list of lists, render as HTML table\nas_list: If msg is a list, render as HTML unordered list\nprimary_action: Bind a primary server/client side action.\nraise_exception: Exception\nis_wide: Show a wide modal\nis_minimizable: Allow users to minimize the modal\nrealtime: publish immediately using websocket instead of adding to response message log\n\nfrappe.msgprint(\n msg='This file does not exist',\n title='Error',\n raise_exception=FileNotFoundError\n)\n\n frappe.msgprint\n\nprimary_action can contain a server_action or client_side action which must contain dotted paths to the respective methods. The JavaScript function must be a globally available function. You can also pass hide_on_success to close the message after the action is successfully completed.\n\n# msgprint with server and client side action\nfrappe.msgprint(msg='This file does not exist',\n title='Error',\n raise_exception=FileNotFoundError\n primary_action={\n 'label': _('Perform Action'),\n 'server_action': 'dotted.path.to.server.method',\n 'client_action': 'dotted.path.to.client.method',\n 'hide_on_success': True,\n 'args': args\n }\n)\n\n frappe.msgprint with primary action\n\nfrappe.throw\n\nfrappe.throw(msg, exc, title, is_minimizable, wide, as_list, primary_action)\n\nThis method will raise an exception as well as show a message in Desk. It is essentially a wrapper around frappe.msgprint.\n\nexc can be passed an optional exception. By default it will raise a ValidationError exception.\n\nfrappe.throw(\n title='Error',\n msg='This file does not exist',\n exc=FileNotFoundError\n)\n\n frappe.throw",
  "scrapedAt": "2025-10-22T00:01:52.914Z"
}