{
  "route": "framework/user/en/bench/guides/configuring-https",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/bench/guides/configuring-https",
  "title": "Get the required files",
  "content": "Get the required files\n\nYou can get a SSL certificate from a trusted Certificate Authority or generate your own. For self signed certificates the browser will show a warning that the certificate is not trusted. Here's a tutorial for using Let's Encrypt to get a free SSL Certificate\n\nThe files required are\n\nCertificate (usually with extension .crt)\nDecrypted private key\n\nPrequisites\n\nYou need to have a DNS Multitenant Setup\nYour site should be accessible via a valid domain\nYou need root permissions on your server\nYou need a valid certificate generated through a trusted Certificate Authority or a Self-Signed Certificate.\n\nTo generate .crt from private authority, generally you would have to generate a CSR (Certificate Signing Request). You may skip this step if you already have a certificate (.crt) file. To generate a CSR and the corresponding key file, run the following command:\n\nopenssl req -new -newkey rsa:2048 -nodes -keyout mydomain.com.key -out mydomain.com.csr\n\nYou need to upload this CSR (.csr) file to the private certificate authority (eg. GoDaddy, ComodoSSL) to generate a valid certificate (.crt) file against it.\n\nIf you have multiple certificates (primary and intermediate), you will have to concatenate them. For example:\n\ncat your_certificate.crt CA.crt >> certificate_bundle.crt\n\nAlso make sure that your private key is readable only by the root user:\n\nchown root private.key\n chmod 600 private.key\n\nMove the two files to an appropriate location\n\nmkdir /etc/nginx/conf.d/ssl\n mv private.key /etc/nginx/conf.d/ssl/private.key\n mv certificate_bundle.crt /etc/nginx/conf.d/ssl/certificate_bundle.crt\n\nSetup nginx config\n\nSet the paths to the certificate and private key for your site\n\nbench set-ssl-certificate site1.local /etc/nginx/conf.d/ssl/certificate_bundle.crt\n bench set-ssl-key site1.local /etc/nginx/conf.d/ssl/private.key\n\nGenerate nginx config\n\nbench setup nginx\n\nReload nginx\n\nsudo service nginx reload\n\nor\n\nsystemctl reload nginx # for CentOS 7\n\nNow that you have configured SSL, all HTTP traffic will be redirected to HTTPS",
  "scrapedAt": "2025-10-22T00:04:27.800Z"
}