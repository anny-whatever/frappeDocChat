{
  "route": "framework/user/en/desk/scripting/script-api",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/desk/scripting/script-api",
  "title": "script-api",
  "content": "List of restricted commands that be called in Frappe Framework Server Script, Print Formats and Script Reports\n\nNote: This is only applicable for in-app scripting. If you want more features, you will have to create an \"Application\" and write the event handlers inside Python Modules\n\nPython Modules\n\nFollowing python modules are available\n\njson\n\nPython standard module json\n\nFormatting\n\n_ (Translate)\n\nTranslate a string\n\nExample: _(\"This is translatable\")\n\nfrappe.format\n\nFormat a value based on its datatype\n\nExample: frappe.format_value(value, dict(fieldtype='Currency'))\n\nfrappe.date_format\n\nFormat as default date format\n\nfrappe.format_date\n\nReturns date as \"1st September 2019\"\n\nSession\n\nfrappe.form_dict\n\nForm / request parameters\n\nExample: Request parameter /page?name=\"test\" can be accesssed as frappe.form_dict.name\n\nfrappe.request\n\nRequest object\n\nfrappe.response\n\nResponse object\n\nfrappe.session.user\n\nCurrent user\n\nfrappe.session.csrf_token\n\nCSRF token of the current session\n\nfrappe.user\n\nCurrent user\n\nfrappe.get_fullname\n\nReturns fullname of the current user\n\nfrappe.get_gravatar\n\nGets the user display image from frappe.utils.get_gravatar_url\n\nfrappe.full_name\n\nFullname of the current user\n\nDocuments (ORM)\n\nDocument access and editing\n\nfrappe.get_meta\n\nGet metadata object\n\nfrappe.new_doc\n\nCreate a new Document record.\n\nfrappe.get_doc\n\nGet Document. You can also save or execute any method exposed by the document.\n\nExample: frappe.get_doc(\"User\", frappe.session.user)\n\nfrappe.get_last_doc\n\nGet the last Document of a particular DocType with a given set of filters. Defaults to last created.\n\nExample: frappe.get_last_doc(\"User\", filters={\"name\": (\"like\", \"%@apple.com\")})\n\nfrappe.get_cached_doc\n\nGet Document (or cached)\n\nfrappe.get_mapped_doc\n\nfrappe.rename_doc\n\nfrappe.delete_doc\n\nfrappe.get_system_settings\n\nGet system default settings\n\nDatabase\n\nDatabase access API\n\nfrappe.db.get_list\n\nGet list of record filtered by current user's permissions\n\nExample: frappe.db.get_list(\"Customer\") will return list of customers\n\nfrappe.db.get_all\n\nGet list of all records\n\nfrappe.db.sql\n\nRun a SELECT query\n\nExample: frappe.db.sql(\"select name from Customer where name like 'm%'\")\n\nfrappe.db.get_value\n\nGet a value from a record\n\nExample: frappe.db.get_value(\"User\", frappe.session.user, \"first_name\")\n\nfrappe.db.get_single_value\n\nGet value from a single type document\n\nExample: frappe.db.get_single_value(\"System Settings\", \"default_currency\")\n\nfrappe.db.get_default\n\nGet default value\n\nfrappe.db.escape\n\nSanitize value for database queries to prevent SQL injection\n\nfrappe.db.set_value\n\nSet a value\n\nfrappe.db.exists\n\nChecks for existence of a document. Returns name of the document if exists else None.\n\nfrappe.db.commit\n\nAllow users to make explicit commits in server scripts like custom scheduler scripts.\nNote: This won't work in any DocType Event server scripts\n\nfrappe.db.rollback\n\nAllow users to rollback changes via server scripts.\nNote: This won't work in any DocType Event server scripts\n\nQuery Builder\n\nfrappe.qb\n\nQuery builder API to run SELECT queries.\n\nExample: frappe.qb.from_(\"Task\").select(\"*\").run()\n\nUtilities\n\nUtility methods and functions\n\nrun_script\n\nRun a server script (return values in frappe.flags)\n\nfrappe.msgprint\n\nShow a modal on the server side after as a part of the response.\n\nExample: frappe.msgprint(\"Hello\")\n\nfrappe.get_hooks\n\nGet application hooks\n\nfrappe.utils\n\nMethods in frappe.utils\n\nfrappe.render_template\n\nRender a Jinja template\n\nfrappe.get_url\n\nGet url of the current site via frappe.utils.get_url\n\nsocketio_port\n\nPort for socketio\n\nstyle.border_color\n\nReturns '#d1d8dd'\n\nguess_mimetype\n\nReturns mimetypes.guess_type\n\nhtml2text\n\nEncode HTML as text (markdown)\n\ndev_server\n\nTrue if in developer mode\n\nfrappe.log_error\n\nGenerate Error Log with a traceback\n\nFrappeClient\n\nConnect to a Frappe site using a requests session\n\nAPI\n\nMake external API calls from Frappe.\n\nfrappe.make_get_request\n\nMake a GET request.\n\nExample: frappe.make_get_request('https://example.com')\n\nfrappe.make_post_request\n\nMake a POST request.\n\nExample: frappe.make_post_request('https://example.com', data={'username: 'test'})\n\nfrappe.make_put_request\n\nMake a PUT request.\n\nExample: frappe.make_put_request('https://example.com', headers={'Auth': 'Bearer xyz'})\n\nEmail\n\nfrappe.sendmail\n\nSend an email. See docs\n\nExample: frappe.sendmail(recipients=['test@example.com'], sender='sender@example.com', subject='My Subject', message='<p>Hello</p>')",
  "scrapedAt": "2025-10-22T00:03:37.358Z"
}