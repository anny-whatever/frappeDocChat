{
  "route": "framework/user/en/api/list",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/api/list",
  "title": "list",
  "content": "The List View is generated for all DocTypes except Child Tables and Single DocTypes.\n\nThe List view is packed with features. Some of them are:\n\nFilters\nSorting\nPaging\nFilter by tags\nSwitch view to Report, Calendar, Gantt, Kanban, etc.\n\n List View\n\nStandard List JS\n\nTo customize the List View you must have a {doctype}_list.js file in the doctype directory. Below are all the options that can be customized.\n\nFor instance, if you want to customize the Note DocType, you'll have to create a file note_list.js with the following contents.\n\nfrappe.listview_settings['Note'] = {\n // add fields to fetch\n add_fields: ['title', 'public'],\n // set default filters\n filters: [\n ['public', '=', 1]\n ],\n hide_name_column: true, // hide the last column which shows the `name`\n hide_name_filter: true, // hide the default filter field for the name column\n onload(listview) {\n // triggers once before the list is loaded\n },\n before_render() {\n // triggers before every render of list records\n },\n\n // set this to true to apply indicator function on draft documents too\n has_indicator_for_draft: false,\n\n get_indicator(doc) {\n // customize indicator color\n if (doc.public) {\n return [__(\"Public\"), \"green\", \"public,=,Yes\"];\n } else {\n return [__(\"Private\"), \"darkgrey\", \"public,=,No\"];\n }\n },\n primary_action() {\n // triggers when the primary action is clicked\n },\n get_form_link(doc) {\n // override the form route for this doc\n },\n // add a custom button for each row\n button: {\n show(doc) {\n return doc.reference_name;\n },\n get_label() {\n return 'View';\n },\n get_description(doc) {\n return __('View {0}', [`${doc.reference_type} ${doc.reference_name}`])\n },\n action(doc) {\n frappe.set_route('Form', doc.reference_type, doc.reference_name);\n }\n },\n // format how a field value is shown\n formatters: {\n title(val) {\n return val.bold();\n },\n public(val) {\n return val ? 'Yes' : 'No';\n }\n }\n}\n\nCustom List JS\n\nYou can also customize the list view by creating Client Script in the system. You should write Client Scripts if the logic is specific to your site. If you want to share List view customization across sites, you must include them via Apps.\n\nTo create a new Client Script, go to\n\nHome > Customization > Client Script > New\n\n New Client Script for List\n\nThe above customization will result in a list view that looks like this:\n\n List View Customized\n\nMultiple Buttons in the List JS\n\n This feature is available on Develop version.\n\nYou now have the capability to add multiple buttons within a dropdown menu in the list view row through the use of the list view client script. This feature enhances the user experience by providing convenient access to various actions directly from the list view.\n\nfrappe.listview_settings[\"ToDo\"] = {\n hide_name_column: true,\n add_fields: [\"reference_type\", \"reference_name\"],\n\n button: {\n show: function(doc) {\n return doc.reference_name;\n },\n get_label: function() {\n return __(\"Open\", null, \"Access\");\n },\n get_description: function(doc) {\n return __(\"Open {0}\", [\n `${__(doc.reference_type)}: ${doc.reference_name}`\n ]);\n },\n action: function(doc) {\n frappe.set_route(\"Form\", doc.reference_type, doc\n .reference_name);\n },\n },\n dropdown_button: {\n get_label: __(\"Dropdown\"),\n buttons: [{\n get_label: __(\"Button 1\"),\n show: function(doc) {\n return true;\n },\n get_description: function(doc) {\n return \"Open Button 1 \" + doc.reference_name;\n },\n action: function(doc) {\n frappe.msgprint(\"Dropdown Button 1 Clicked \" +\n doc.reference_name);\n }\n },\n {\n get_label: __(\"Button 2\"),\n show: function(doc) {\n return doc.status != \"Closed\";\n },\n get_description: function(doc) {\n return \"Open Button 2 \" + doc.reference_name;\n },\n action: function(doc) {\n frappe.msgprint(\"Dropdown Button 2 Clicked \" +\n doc.reference_name);\n }\n },\n {\n get_label: __(\"Button 3\"),\n show: function(doc) {\n return doc.status != \"Cancelled\";\n },\n get_description: function(doc) {\n return \"Open Button 3 \" + doc.reference_name;\n },\n action: function(doc) {\n frappe.msgprint(\"Dropdown Button 3 Clicked \" +\n doc.reference_name);\n }\n },\n ]\n }\n };",
  "scrapedAt": "2025-10-22T00:02:00.692Z"
}