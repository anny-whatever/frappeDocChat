{
  "route": "framework/user/en/desk/printing",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/desk/printing",
  "title": "printing",
  "content": "Frappe framework has first class support for generating print formats for documents and also convert them into PDF. Frappe uses Jinja as the templating language for print formats.\n\nPrint View\n\nThe Print View can be accessed from the form view of any document. A Standard print format is generated for all DocTypes based on the form layout and mandatory fields in it. Print View\n\nPrint Format Builder\n\nTo Customize a print format you need to create a copy of the Standard Print format and customize it using the Print Format Builder. These print formats are user editable and are not bundled with the app as files.\n\n Print Format Builder\n\nCustom HTML\n\nYou can also add Custom HTML to your Print Format. Just drag and drop the Custom HTML button in left sidebar into your Print Format Editor.\n\nIn the Custom HTML field you can use any valid HTML with Bootstrap 3 classes for styling. You can also use Jinja Templating to add dynamic content to your HTML. See list of methods available to use in Jinja templates.\n\n Custom HTML\n\nCustom CSS\n\nTo change styling in your Print Format you can also add custom CSS.\n\n Click on Customize > Edit Properties to add Custom CSS\n\n Custom CSS\n\n Custom CSS Preview\n\nAdvanced Print Formats\n\nPrint Format Builder is limited if you want to completely change the layout of the Print Format. You can also write your own HTML from scratch and build the print layout you want.\n\nTo create a new Print Format, type \"new print format\" in awesomebar and hit enter.\n\nSelect a unique name for your format.\nSet \"Standard\" as \"No\".\nCheck \"Custom Format\".\nSelect Print Format Type as \"Jinja\"\nWrite your custom HTML\n\n If you set Standard as \"Yes\" and Developer Mode is enabled, then a JSON file > will be generated for your Print Format and you will have to check it in to > your version control with your app.\n\n Custom HTML in Print Format\n\nPrint Formats for Reports\n\nFrappe allows you to create custom Print Formats for your Query and Script Reports. These print formats cannot be created using the UI.\n\nTo create a Print Format for reports, create a HTML file named {report-name}.html in the Report folder.\n\nFor example, check General Ledger\n\nJS Templating\n\nThese print formats are generated on the client side, so we can't use Jinja. We use an adapted version of John Resig's Templating. It looks similar to Jinja so you don't need to learn anything new.\n\nHere's a snippet of JS Template.\n\n{% for(var i=0, l=data.length; i<l; i++) { %}\n <tr>\n {% if(data[i].posting_date) { %}\n <td>{%= frappe.datetime.str_to_user(data[i].posting_date) %}</td>\n <td>\n {% if(!(filters.party || filters.account)) { %}\n {%= data[i].party || data[i].account %}\n <br>\n {% } %}\n\n {{ __(\"Against\") }}: {%= data[i].against %}\n <br>{%= __(\"Remarks\") %}: {%= data[i].remarks %}\n </td>\n {% } else { %}\n <td><b>{%= frappe.format(data[i].account, {fieldtype: \"Link\"}) || \"&nbsp;\" %}</b></td>\n <td style=\"text-align: right\">\n {%= data[i].account && format_currency(data[i].debit, filters.presentation_currency) %}\n </td>\n {% } %}\n </tr>\n{% } %}",
  "scrapedAt": "2025-10-22T00:02:14.071Z"
}