{
  "route": "framework/user/en/integration/razorpay",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/integration/razorpay",
  "title": "razorpay",
  "content": "Razorpay is a popular payments solution in India which allows businesses to accept, process and disburse payments with its product suite. It gives you access to payment methods like Credit Cards, Debit Cards and Netbanking.\n\nIntegrating Razorpay Client Checkout\n\nRazorpay Payment\n\nSteps for integration\n\nInclude checkout script in your code\n\nInsert the following script on your page <script type=\"text/javascript\" src=\"/assets/js/checkout.min.js\"></script>\nThe checkout script automatically fetches the razorpay checkout script and wraps their API for some syntactic sugar.\n\nCreate the Order controller in your backend\n\ndef get_razorpay_order(self):\n controller = get_payment_gateway_controller(\"Razorpay\")\n\n payment_details = {\n \"amount\": 30000,\n ...\n \"reference_doctype\": \"Conference Participant\",\n \"reference_docname\": self.name,\n ...\n \"receipt\": self.name\n }\n\n return controller.create_order(**payment_details)\n\nInititate the payment in client using checkout API\n\nfunction make_payment(ticket) {\n var options = {\n \"name\": \"<CHECKOUT MODAL TITLE>\",\n \"description\": \"<CHECKOUT MODAL DESCRIPTION>\",\n \"image\": \"<CHECKOUT MODAL LOGO>\",\n \"prefill\": {\n \"name\": \"<CUSTOMER NAME>\",\n \"email\": \"<CUSTOMER EMAIL>\",\n \"contact\": \"<CUSTOMER PHONE>\"\n },\n \"theme\": {\n \"color\": \"<MODAL COLOR>\"\n },\n \"doctype\": \"<REFERENCE DOCTYPE>\", // Mandatory\n \"docname\": \"<REFERENCE DOCNAME\" // Mandatory\n };\n\n razorpay = new frappe.checkout.razorpay(options)\n razorpay.on_open = () => {\n // SCRIPT TO RUN WHEN MODAL OPENS\n }\n razorpay.on_success = () => {\n // SCRIPT TO RUN ON PAYMENT SUCCESS\n }\n razorpay.on_fail = () => {\n // SCRIPT TO RUN ON PAYMENT FAILURE\n }\n razorpay.init() // Creates the order and opens the modal\n}\n\nLifecycle\n\nCreate an Order in your backend\n\nAn order is first created at the server triggered by razorpay.init(), for this a controller get_razorpay_order must be created for the doctype. The server method sets the amount to be charged and a unique receipt id for razorpay APIs to consume.\n\nThe get_razorpay_order internally calls the create_order controller of razorpay settings doctype. which then creates an integration request and sends POST request to https://api.razorpay.com/v1/orders\nProcess Checkout at Client\n\nA successful creation of the Order returns the order_id that is stored against the Order in integration request. This order_id is passed to the client which triggers the razorpay modal. After the payment, depending on the status the success or fail API method is called and the payment ID is passed to it.\nVerify the payment\n\nOnce the API method is called, The transaction details are saved in integration request. If successful the authorize_payment controller is called, which checks the payment status from razorpay API using the Payment ID. Once authorized, the integration request is marked as Completed, following this the payment success hook of the reference_doctype is called.\n\nYou can read more about Razorpay custom checkout in their documentation",
  "scrapedAt": "2025-10-22T00:03:56.486Z"
}