{
  "route": "framework/user/en/guides/integration/rest_api/listing_documents",
  "sourceUrl": "https://docs.frappe.io/framework/user/en/guides/integration/rest_api/listing_documents",
  "title": "listing_documents",
  "content": "To list documents, make a GET request to /api/resource/{doctype}.\n\nGET /api/resource/Person\n\n All listings are returned paginated by 20 items. To change the page size, you can pass the query parameter limit_page_length. To request succesive pages, pass limit_start.\n\nThe response is returned as JSON Object and the listing is an array in with the key data.\n\nResponse:\n\n{\n \"data\": [\n {\n \"name\": \"000000012\"\n },\n {\n \"name\": \"000000008\"\n }\n ]\n}\n\nBy default, only the name field is included in the listing. To add more fields, you can pass the fields parameter with your GET request. fields has to be a JSON array containing the fieldnames.\n\nGET /api/resource/Person/?fields=[\"name\",\"first_name\"]\n\nResponse:\n\n{\n \"data\": [\n {\n \"first_name\": \"Jane\",\n \"name\": \"000000012\"\n },\n {\n \"first_name\": \"John\",\n \"name\": \"000000008\"\n }\n ]\n}\n\nYou can filter the listing using SQL-conditions by passing the query parameter filters. filters has to be a JSON array containing one or multiple filters. Each condition is an array of the format, [{doctype}, {field}, {operator}, {operand}].\n\nFor example, get the name (id) of all persons with firstname \"Jane\":\n\nGET /api/resource/Person?filters=[[\"Person\",\"first_name\",\"=\",\"Jane\"]]\n\nResponse:\n\n { \"data\": [ { \"name\": \"000000012\" } ] }\n\nAuthors: Rushabh Mehta (rushabh@erpnext.com), Raffael Meyer (raffael@alyf.de)",
  "scrapedAt": "2025-10-22T00:03:25.161Z"
}